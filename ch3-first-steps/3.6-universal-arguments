Some commands have alternate states which you can reach using a (universal argument) also called a (prefix argument). The universal argument to bound to C-u (hold Control then press u). When prefix a command with C-u you're telling Emacs to modify the behavior that command. Some commands have zero or several universal argument states. If a command has N states, you simply type C-u up to N times

The universal argument C-u is a short hand for the number 4, so the key sequence C-u a will print 4 a's, C-u C-u will print 16 (4 * 4) a's.

Universal arguments are inactive on their own, when typed Emacs waits for more keys, so universal argument is much like a prefix key

BY THE WAY:
----------
	When Emacs is writing characters on the screen it calls the special command (self-insert-command) which when invoked inserts the last typed key, this way keyboard characters and (self-insert-command) are subject to the exact rules of all other commands, they can be unbound, rebound and modified.

DIGIT ARGUMENTS:
---------------
*M-0 to M-9 : Digit argument for commands that start with Meta
M-5-d : delete 5 words forward

*C-0 to C-9 : Digit argument for commands that start with Control
C-5-d : delete 5 characters forward

C-M-0 to C-M-9 : Digit argument for commands that start with Control-Meta
C-M-4-_ : Redo 4 times

C-- : Control followed by -, reverse the direction of the following command
C--9d : delete 9 characters before the point

M-- : Meta followed by -, reverse the direction of the following command
M--5d : delete 5 words backwards

C-M-- : Control followed by Meta followed by -, reverse the direction of the following command

Keys sequences (C--, M--, C-M--) are called (Negative Arguments)

A lot of people never bother working the digit and negative
arguments into their workflow, but I find them immensely
useful. Things like changing the casing on a word I
just typed are easily done by reversing the direction of a
command by giving it a negative argument.

Maintain your tempo and avoid moving your fingers
away from the home row. Negative arguments add
directionality to commands; digits add repetition or
change how a command works.